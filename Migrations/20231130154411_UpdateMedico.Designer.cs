// <auto-generated />
using System;
using API.Source.Base.SQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231130154411_UpdateMedico")]
    partial class UpdateMedico
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("API.Model.Data.Agendamento", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("Horario")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("integer");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<int?>("PacienteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId")
                        .IsUnique();

                    b.HasIndex("PacienteId")
                        .IsUnique();

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("API.Model.Data.Medico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("API.Model.Data.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cpf")
                        .HasColumnType("text");

                    b.Property<int?>("Idade")
                        .HasColumnType("integer");

                    b.Property<int?>("MedicoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("StatusAtendimento")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId")
                        .IsUnique();

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("API.Model.Data.Agendamento", b =>
                {
                    b.HasOne("API.Model.Data.Medico", "Medico")
                        .WithOne("Agendamento")
                        .HasForeignKey("API.Model.Data.Agendamento", "MedicoId");

                    b.HasOne("API.Model.Data.Paciente", "Paciente")
                        .WithOne("Agendamento")
                        .HasForeignKey("API.Model.Data.Agendamento", "PacienteId");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("API.Model.Data.Paciente", b =>
                {
                    b.HasOne("API.Model.Data.Medico", "Medico")
                        .WithOne("Paciente")
                        .HasForeignKey("API.Model.Data.Paciente", "MedicoId");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("API.Model.Data.Medico", b =>
                {
                    b.Navigation("Agendamento");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("API.Model.Data.Paciente", b =>
                {
                    b.Navigation("Agendamento");
                });
#pragma warning restore 612, 618
        }
    }
}
